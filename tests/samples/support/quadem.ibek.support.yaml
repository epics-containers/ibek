# yaml-language-server: $schema=../schemas/ibek.support.schema.json

module: quadEM

entity_models:
  - name: TetrAMM
    description: |-
      TODO:ADD DESCRIPTION
    parameters:
      PORT:
        type: id
        description: |-
          Template argument

      P:
        type: str
        description: |-
          Base name of PV.

      R:
        type: str
        description: |-
          Second macro for name of PV.

      QSIZE:
        type: int
        description: |-
          ..
        default: 20

      RING_SIZE:
        type: int
        description: |-
          ..
        default: 10000

      IP:
        type: str
        description: |-
          IP address of the TetrAMM device

    pre_init:
      - value: |
          drvAsynIPPortConfigure({{PORT}}ip, {{IP}}, 100, 0, 0)
          asynOctetSetInputEos({{PORT}}ip, 0, "\r\n")
          asynOctetSetOutputEos({{PORT}}ip, 0, "\r")

          # drvTetrAMMConfigure(portName, IPportName, RingSize)
          drvTetrAMMConfigure("{{PORT}}", "{{PORT}}ip", {{RING_SIZE}})

    post_init:
      - value: |
          # Increase precision of sample time for TetrAMM
          dbpf("{{P}}{{R}}SampleTime_RBV.PREC", "5")

    databases:
      - file: $(QUADEM)/db/TetrAMM.template
        args:
          P:
          R:
          PORT:

  - name: Plugins
    description: |-
      Instantiates
        12 NDStats plugins for Current, Sum, Diff and Pos Channels
        12 NDTimeSeries plugins
        12 NDArray plugins
    parameters:
      DEVICE:
        type: object
        description: |-
          Reference to the parent quadEM device

      PORTPREFIX:
        type: id
        description: |-
          The prefix for plugin asyn port names

      STAT_NCHAN:
        type: int
        description: |-
          Template argument

      STAT_XSIZE:
        type: int
        description: |-
          Template argument

      HIST_SIZE:
        type: int
        description: |-
          Template argument
        default: 256

      QUEUE:
        type: int
        description: |-
          length of NDArray queue
        default: 16

    pre_init:
      - value: |

          ################################################################################
          # Just demonstrating that Entities can have their own pre_init AND SubEntities.
          # This is the pre_init for quadem.Plugins device with id {{PORTPREFIX}}
          ################################################################################

          #

    shared:
      # IMPORTANT - you must use DEVICE.PORT instead of DEVICE in sub_entities
      # because there is no type info and DEVICE is just a dictionary
      - &stats { type: ADCore.NDStats, P: "{{DEVICE.P}}", NCHANS: "{{STAT_NCHAN}}", XSIZE: "{{STAT_XSIZE}}", YSIZE: 0, HIST_SIZE: "{{HIST_SIZE}}", NDARRAY_PORT: "{{DEVICE.PORT}}", ENABLED: 1 }
      - &arrays { type: ADCore.NDStdArrays, P: "{{DEVICE.P}}", NDARRAY_PORT: "{{DEVICE.PORT}}", ENABLED: 1, TYPE: Float64, FTVL: DOUBLE, NELEMENTS: "{{STAT_XSIZE}}" }

    sub_entities:
      - { <<: *stats, PORT: "{{PORTPREFIX}}.STATS.I1", R: Cur1 }
      - { <<: *stats, PORT: "{{PORTPREFIX}}.STATS.I2", R: Cur2 }
      - { <<: *stats, PORT: "{{PORTPREFIX}}.STATS.I3", R: Cur3 }
      - { <<: *stats, PORT: "{{PORTPREFIX}}.STATS.I4", R: Cur4 }
      - { <<: *stats, PORT: "{{PORTPREFIX}}.STATS.SumX", R: SumX }
      - { <<: *stats, PORT: "{{PORTPREFIX}}.STATS.SumY", R: SumY }
      - { <<: *stats, PORT: "{{PORTPREFIX}}.STATS.SumAll", R: SumAll }
      - { <<: *stats, PORT: "{{PORTPREFIX}}.STATS.DiffX", R: DiffX }
      - { <<: *stats, PORT: "{{PORTPREFIX}}.STATS.DiffY", R: DiffY }
      - { <<: *stats, PORT: "{{PORTPREFIX}}.STATS.PosX", R: PosX }
      - { <<: *stats, PORT: "{{PORTPREFIX}}.STATS.PosY", R: PosY }

      - { <<: *arrays, PORT: "{{PORTPREFIX}}.ARRAYS.Arr1", R: Arr1 }
      - { <<: *arrays, PORT: "{{PORTPREFIX}}.ARRAYS.Arr2", R: Arr2 }
      - { <<: *arrays, PORT: "{{PORTPREFIX}}.ARRAYS.Arr3", R: Arr3 }
      - { <<: *arrays, PORT: "{{PORTPREFIX}}.ARRAYS.Arr4", R: Arr4 }
      - { <<: *arrays, PORT: "{{PORTPREFIX}}.ARRAYS.SumX", R: SumX }
      - { <<: *arrays, PORT: "{{PORTPREFIX}}.ARRAYS.SumY", R: SumY }
      - { <<: *arrays, PORT: "{{PORTPREFIX}}.ARRAYS.SumAll", R: SumAll }
      - { <<: *arrays, PORT: "{{PORTPREFIX}}.ARRAYS.DiffX", R: DiffX }
      - { <<: *arrays, PORT: "{{PORTPREFIX}}.ARRAYS.DiffY", R: DiffY }
      - { <<: *arrays, PORT: "{{PORTPREFIX}}.ARRAYS.PosX", R: PosX }
      - { <<: *arrays, PORT: "{{PORTPREFIX}}.ARRAYS.PosY", R: PosY }
